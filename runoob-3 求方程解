一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？
x+100=？
x+268=？？


1.问题分析
根据这个提问，它就是一个方程求解问题，判断条件为完全平方数。所谓完全平方就是1，4，9，16这样的。难点在判断条件。就看结果开根号了。
查阅发现开根号这个函数在math.h里面。然后判断条件就是开根号的值有没有小数，这个怎么判断?


解决方案1：枚举法
将数从1开始挨着往后面判断：
#include<stdio.h>
#include<math.h> 
int main()
{
	double a=0,b,c,d,e;
	int x;
	for(x=1;x<10000;x++)
	   a=a+1;
       b=sqrt(a+100);
       c=sqrt(a+268);
       d=b-int(b);
       e=c-int(c);
        if(d==0.0)  //还可以写成if(d==0&&e==0)
          if(e==0.0)
             printf("这个整数是： %f",a); 
	}
      
	return 0;
 } 
 问题是，不知道解的范围，循环次数就只有自己瞎找。很有可能找不全。
 
 解法2：数学先解方程，再列程序
 假设该数为 x。
1、则：x + 100 = n2, x + 100 + 168 = m2
2、计算等式：m2 - n2 = (m + n)(m - n) = 168
3、设置： m + n = i，m - n = j，i * j =168，i 和 j 至少一个是偶数
4、可得： m = (i + j) / 2， n = (i - j) / 2，i 和 j 要么都是偶数，要么都是奇数。
5、从 3 和 4 推导可知道，i 与 j 均是大于等于 2 的偶数。
6、由于 i * j = 168， j>=2，则 1 < i < 168 / 2 + 1。
7、接下来将 i 的所有数字循环计算即可。

#include <stdio.h>
int main (void)
{
    int  i, j, m, n, x;
    for (i = 1; i < 168 / 2 + 1; i++)   
    {
        if (168 % i == 0)   //这一步就在判断i是不是偶数
        {
            j = 168 / i;
            if ( i > j && (i + j) % 2 == 0 && (i - j) % 2 == 0) //这个就是全部判断条件，i>j保证不重复，然后重复上面条件4，这里带来了条件的交集写法。
            {
                m = (i + j) / 2;
                n = (i - j) / 2;
                x = n * n - 100;
                printf ("%d + 100 = %d * %d\n", x, n, n);
                printf ("%d + 268 = %d * %d\n", x, m, m);
            }
        }
    }
    return 0;
}
